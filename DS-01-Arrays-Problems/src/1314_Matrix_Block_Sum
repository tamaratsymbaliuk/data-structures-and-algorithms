Given a m x n matrix mat and an integer k, return a matrix answer where each answer[i][j] is the sum of all elements mat[r][c] for:

i - k <= r <= i + k,
j - k <= c <= j + k, and
(r, c) is a valid position in the matrix.



class Solution {
    public int[][] matrixBlockSum(int[][] mat, int k) {
        /*
        k = 1
        mat =
         [
            [1,2,3],
            [4,5,6]
            [7,8,9]
        ]

         answer =
         [
            [12,21,16], 12 = 1+2+4+5; 21= 1+2+3+4+5+6; 16=2+3+5+6
            [27,45,33]
            [24,39,28]
        ]

         if i=0 and j=1 => p=-1..+1 and q=0..2
         what is a valid cell in a matrix?
         if
         0<=p<=n-1 n - number of rows
         0<=q<=m-1 - m - number of coll
         then it is a valid cell
        */

        // 1D version of the problem
        //where answer[i] = sum(nums[i-k..i+k])
        int n = nums.length;
        int[] answer = new int[n];
        int[] prefix = new int[n];
        prefix[0] = nums[0];
        for (int i = 1; i < n; i++){
            prefix[i] = prefix[i - 1] + nums[i];
        }

        for (int i = 0; i < n; i++){
            // k = 2
            // n = 4
            //
            //. 0 1 2 3
            // [4 9 1 2]
            // i + k = 2 + 2 = 4
            // i + k is out of bounds
            // Math.min(n - 1,i + k)
            // prefix[i + k] => prefix[Math.min(n - 1,i + k)]
            // -
            // prefix[i - k - 1]
            // i - k - 1 < 0 => subtract 0
            // i - k - 1 >= 0 => subtract prefix[i - k - 1]
            // -> sum(nums[i-k..i+k])

            int first = prefix[Math.min(n - 1,i + k)];
            int second = i - k - 1 < 0? 0 :  prefix[i - k - 1];
            answer[i] = first - second;
        }

        return answer;

    }
}